rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    match /transactions/{transactionId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    match /recurring-expenses/{expenseId} {
      allow read, write: if request.auth.uid == request.resource.data.userId || request.auth.uid == resource.data.userId;
    }
    
    match /friend-requests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.fromUser.uid;
      allow read: if request.auth.uid == resource.data.fromUser.uid || request.auth.uid == resource.data.toUserId;
      // Allow recipient to accept/reject (update) or delete the request
      allow update, delete: if request.auth.uid == resource.data.toUserId;
    }
    
    match /friendships/{friendshipId} {
        allow read, delete: if request.auth.uid in resource.data.userIds;
        allow create: if request.auth.uid in request.resource.data.userIds;
    }
    
    match /circles/{circleId} {
        allow read: if request.auth.uid in resource.data.memberIds;
        allow create: if request.auth.uid == request.resource.data.ownerId;
        // Any member can update the circle (e.g., to leave it)
        allow update: if request.auth.uid in resource.data.memberIds;
        // Only the last member can delete the circle document
        allow delete: if resource.data.memberIds.length == 1 && request.auth.uid in resource.data.memberIds;
    }

    match /debts/{debtId} {
      allow create: if request.auth.uid in request.resource.data.involvedUids;
      allow read, update: if request.auth.uid in resource.data.involvedUids;
      
      // Allow deletion ONLY IF it's part of a circle deletion by the last member.
      // This is crucial for the "leave circle" and "delete data" features to work.
      allow delete: if get(/databases/$(database)/documents/circles/$(resource.data.circleId)).data.memberIds.length == 1 
                      && request.auth.uid in get(/databases/$(database)/documents/circles/$(resource.data.circleId)).data.memberIds;
    }

    match /notifications/{notificationId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.fromUser.uid;
    }
  }
}
